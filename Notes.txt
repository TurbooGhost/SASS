Sass is a stylesheet language thatâ€™s compiled to CSS. It allows you to use variables, nested rules, mixins, functions, and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized and makes it easy to share design within and across projects.


// Debug
// @debug math.div(8, 4);
// @debug math.floor(2.6);
// @debug math.max(1, 15);

// Maps 
// This is a map down below
$colors: (
  "primary": $primary,
  "secondary": $secondary,
  "error": $error,
  "info": $info,
  "blue": #19196e,
  "red": #e61919,
  "yellow": #e6e619,
  "green": #19e635,
  "orange": #ffa600,
  "purple": #9900ff,
  "gray": #808080,
  "black": black,
  "white": white
);

.test-btn {
  background-color: map-get($colors, "purple"); // how to apply them
}

@debug map-get($colors, "purple"); // get the key
@debug map-has-key($colors, "secondary"); // returing t/f
@debug map-remove($colors, "primary"); // remove the key
@debug map-merge(
  $colors,
  (
    "pink": #ffc0cb // adding stuff to the map
  )
);



************************************************************************************************
@each $key, $val in $colors {
  .text-#{$key} {
    color: $val;
  }

  .text-hover-#{$key}:hover {
    &:hover {
      color: $val;
    }

    &:last-child {

    }

    &:nth-child(2){
        
    }
  }

  .bg-#{$key} {
    background-color: $val;
  }

  @if ($val != black and $val != white) {
    // light variations
    @for $i from 1 through 9 {
      .text-#{$key}-light-#{$i} {
        color: mix(white, $val, $i * 10%);
      }

      .bg-#{$key}-light-#{$i} {
        background-color: mix(white, $val, $i * 10%);
      }
    }

    // dark variations
    @for $i from 1 through 9 {
      .text-#{$key}-dark-#{$i} {
        color: mix(black, $val, $i * 10%);
      }

      .bg-#{$key}-dark-#{$i} {
        background-color: mix(black, $val, $i * 10%);
      }
    }
  }
}


@if (10 > 5) {
  test-if {
    color: black;
  }
} @else {
  test-if-2 {
    color: white;
  }
}


// @debug map-get($colors, "purple");
// @debug map-has-key($colors, "secondary");
// @debug map-remove($colors, "primary");
// @debug map-merge(
//   $colors,
//   (
//     "pink": #ffc0cb
//   )
// );
